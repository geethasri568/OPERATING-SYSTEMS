#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/msg.h>
#include <unistd.h>

// Define a structure for the message
struct msg_buffer {
    long msg_type;
    char msg_text[100];
};

int main() {
    key_t key;
    int msg_id;
    struct msg_buffer message;

    // Generate a unique key
    key = ftok("progfile", 65);

    // Create a message queue and get its ID
    msg_id = msgget(key, 0666 | IPC_CREAT);
    message.msg_type = 1;

    printf("Enter message to send to the queue: ");
    fgets(message.msg_text, sizeof(message.msg_text), stdin);

    // Send the message to the queue
    msgsnd(msg_id, &message, sizeof(message), 0);

    printf("Data sent is: %s\n", message.msg_text);

    // Sleep for a while to simulate the other process
    sleep(2);

    // Receive the message from the queue
    msgrcv(msg_id, &message, sizeof(message), 1, 0);

    printf("Data received from queue is: %s\n", message.msg_text);

    // Destroy the message queue
    msgctl(msg_id, IPC_RMID, NULL);

    return 0;
}
